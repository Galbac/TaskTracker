services:

  db:
    image: postgres
    container_name: task_tracker_postgres_db
    restart: always
    networks:
      - db_net
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - 5432:5432

  adminer:
    image: adminer
    container_name: task_tracker_adminer
    restart: always
    networks:
      - db_net
    ports:
      - 8080:8080

  web:
    build: .
    container_name: task_tracker_web
    restart: always
    networks:
      - db_net
    ports:
      - 8000:8000
    depends_on:
      - db
    env_file:
      - .env
    volumes:
      - .:/app
    image: task_tracker

  redis:
    image: redis
    container_name: task_tracker_redis
    restart: always
    networks:
      - db_net
    ports:
      - 6379:6379

  celery:
    build: .
    container_name: task_tracker_celery
    restart: always
    networks:
      - db_net
    depends_on:
      - redis
      - db
    command: celery -A celery_worker.celery_app worker --loglevel=info
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}

  cron:
    image: python:3.11-slim
    container_name: task_tracker_cron
    restart: always
    networks:
      - db_net
    volumes:
      - .:/app
    working_dir: /app
    command: >
      sh -c 'apt update && apt install -y cron &&
             echo "* * * * * cd /app && python -c \"from app.tasks import check_deadlines; check_deadlines.delay()\"" | crontab - &&
             cron -f'
    depends_on:
      - celery

volumes:
  postgres_data:

networks:
  db_net:
    driver: bridge